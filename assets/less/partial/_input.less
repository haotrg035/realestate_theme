input, .form-control {
  height: @size_input_height;
  .rounded(16px);
}

.input-group-icon {
  position: relative;

  svg, i {
    position: absolute;
    top: 50%;
    left: .75rem;
    .translate(0, -50%);
  }

  input {
    padding-left: 2.25rem;
  }
}

.button-radio {
  position: relative;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: .5rem 1rem;
  .rounded(4px);
  //border: 1px solid @color_primary;
  background: fade(@color_primary, 30%);
  color: @color_primary;
  font-weight: bold;
  .square(100%);
  .transition(@transition_primary);
  overflow: hidden;

  &&--pill {
    .rounded(14px);
  }

  &&--lightgray {
    background: fade(@color_text, 10%);
    color: @color_text;
  }

  &&--outline {
    border: 1px solid @color_primary;
    background: transparent;
    color: @color_primary;
  }

  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    background: @color_primary;
    .translate(-50%, -50%);
    .transition(all .2s ease-out);
    .square(0);
    .rounded(12px);
    z-index: 1;
  }

  &:hover {
    cursor: pointer;
  }

  &.active {
    color: #fff !important;
    background: @color_primary;

    &::before {
      .square(200%);
      .transition(all .3s ease-in);
    }
  }

  &__input {
    position: absolute;
    top: 0;
    left: 0;
    .square(100%);
    opacity: 0;

    &:hover {
      cursor: pointer;
    }
  }

  &__label {
    margin-bottom: 0;
    position: relative;
    z-index: 2;
  }
}

.range-slider {
  border: 1px solid lighten(@color_text, 70%);
  height: 12px;

  .noUi {
    &-connect {
      background: @color_primary;
    }

    &-origin {
      .noUi-handle {
        .square(24px);
        .rounded(100%);
        .resetFormControlHover();
        background: @color_primary;
        display: flex;
        justify-content: center;
        border: 3px solid #ffffff;
        .boxShadow(0 0 3px rgba(34, 34, 34, 0.57));
        .transition(@transition_primary);

        &:hover {
          .boxShadow(0 0 6px rgba(34, 34, 34, 0.57)) !important;
        }

        &::before, &::after {
          display: none;
        }
      }
    }
  }
}

.quantity-input {
  display: flex;
  align-items: center;
  justify-content: flex-end;

  &__btn {
    background: transparent;
    border: none;
    //.square(@size_input_height);
    color: @color_primary;
    padding: 0;
    font-size: 1.8rem;
    display: flex;
    .square(23px);
    .rounded(100%);
    .flexCenter();
    .resetFormControlHover();
    .transition(@transition_primary);

    &:hover {
      background: @color_primary;
      color: #fff;
      .boxShadow(0 0 3px rgba(34, 34, 34, 0.57));
    }
  }

  .form-control {
    width: 6rem;
    font-size: 1.2rem;
    padding: 0;
    height: @size_input_height;
    border: none;
    text-align: center;
    background: transparent;
    .resetFormControlHover();
  }
}

.input-icon {
  position: relative;

  i, svg {
    position: absolute;
    left: .5rem;
    top: 50%;
    .translate(0, -50%);
  }

  input {
    padding-left: 1.8rem;
  }
}

.bootstrap-select {
  .dropdown-toggle {
    padding: .5rem;
    border: 1px solid @color_border;
    .rounded(4px);
    color: @color_text !important;

    &:hover, &:focus {
      outline: none !important;
      border-color: @color_primary;
      background: #FFFFFF;
    }

    .filter-option-inner {
      .font-weight-bold {
        color: @color_text;
      }
    }
  }

  .dropdown-menu {
    padding: 0;
    .rounded(4px);
    border: none;
    .boxShadow(0 1px 10px #24242452);

    .bs-searchbox {
      padding: .25rem;

      .form-control {
        .rounded(0);
      }
    }

    li {
      &:not(:last-child) {
        border-bottom: 1px solid @color_border;
      }

      a.dropdown-item {
        padding: .5rem 1rem;

        &.active {
          background: @color_primary;
        }
      }
    }
  }
}


.custom-switch {
  .custom-control-input {
    &:checked ~ .custom-control-label::before {
      background-color: @color_primary;
      border-color: @color_primary;
    }
  }

  .custom-control-label {
    background-color: #FFFFFF !important;

    &::before {
      top: 0 !important;
    }

    &::after {
      top: 0.1rem !important;
    }
  }
}

/* for md */
.custom-switch.custom-switch-md .custom-control-label {
  padding-left: 2rem;
  //padding-bottom: 1.5rem;
}

.custom-switch.custom-switch-md .custom-control-label::before {
  height: 1.5rem;
  width: calc(2rem + 0.75rem);
  border-radius: 3rem;
}

.custom-switch.custom-switch-md .custom-control-label::after {
  width: calc(1.5rem - 4px);
  height: calc(1.5rem - 4px);
  border-radius: calc(2rem - (1.5rem / 2));
}

.custom-switch.custom-switch-md .custom-control-input:checked ~ .custom-control-label::after {
  transform: translateX(calc(1.5rem - 0.25rem));
}

/* for lg */

.custom-switch.custom-switch-lg .custom-control-label {
  padding-left: 3rem;
  padding-bottom: 2rem;
}

.custom-switch.custom-switch-lg .custom-control-label::before {
  height: 2rem;
  width: calc(3rem + 0.75rem);
  border-radius: 4rem;
}

.custom-switch.custom-switch-lg .custom-control-label::after {
  width: calc(2rem - 4px);
  height: calc(2rem - 4px);
  border-radius: calc(3rem - (2rem / 2));
}

.custom-switch.custom-switch-lg .custom-control-input:checked ~ .custom-control-label::after {
  transform: translateX(calc(2rem - 0.25rem));
}

/* for xl */

.custom-switch.custom-switch-xl .custom-control-label {
  padding-left: 4rem;
  padding-bottom: 2.5rem;
}

.custom-switch.custom-switch-xl .custom-control-label::before {
  height: 2.5rem;
  width: calc(4rem + 0.75rem);
  border-radius: 5rem;
}

.custom-switch.custom-switch-xl .custom-control-label::after {
  width: calc(2.5rem - 4px);
  height: calc(2.5rem - 4px);
  border-radius: calc(4rem - (2.5rem / 2));
}

.custom-switch.custom-switch-xl .custom-control-input:checked ~ .custom-control-label::after {
  transform: translateX(calc(2.5rem - 0.25rem));
}